{"version":3,"sources":["../../src/components/AudioRenderer.tsx","../../src/components/ControlButton.tsx","../../src/components/AudioSelectButton.tsx","../../src/useParticipant.ts","../../src/components/VideoSelectButton.tsx","../../src/components/ControlsView.tsx","../../src/components/VideoRenderer.tsx","../../src/components/ParticipantView.tsx","../../src/components/ScreenShareView.tsx","../../src/components/desktop/DesktopStage.tsx","../../src/components/mobile/MobileStage.tsx","../../src/components/StageView.tsx","../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/useRoom.ts","../../src/LiveKitRoom.tsx","PreJoinPage.tsx","RoomPage.tsx","App.tsx","index.tsx"],"names":["AudioRenderer","track","isLocal","audioEl","useRef","useEffect","el","ControlButton","label","disabled","onClick","icon","className","menuItems","onMenuItemClick","useState","menuVisible","setMenuVisible","classes","styles","menu","React","menuTrigger","dropdown","separator","height","faChevronDown","popoverMenu","list","key","i","item","handleMenuClick","isOpen","positions","content","buttonWrapper","AudioSelectButton","isMuted","onSourceSelected","sources","setSources","setMenuItems","listAudioDevices","useCallback","Room","devices","navigator","faMicrophone","device","d","useParticipant","participant","isAudioMuted","setAudioMuted","setVideoMuted","isSpeaking","setSpeaking","metadata","setMetadata","publications","setPublications","subscribedTracks","setSubscribedTracks","onPublicationsChanged","Array","pub","onMuted","Track","onUnmuted","onMetadataChanged","onIsSpeakingChanged","ParticipantEvent","muted","cameraPublication","microphonePublication","screenSharePublication","unpublishTrack","Error","VideoSelectButton","isEnabled","listVideoDevices","faVideoSlash","ControlsView","room","enableScreenShare","enableAudio","enableVideo","onLeave","enabled","muteButton","videoButton","screenButton","faDesktop","controlsWrapper","dangerButton","VideoRenderer","objectFit","width","ref","isFrontFacing","style","transform","video","ParticipantView","aspectWidth","aspectHeight","orientation","displayName","showOverlay","onMouseEnter","onMouseLeave","containerStyles","videoOrientation","mainElement","placeholder","ratio","participantBar","iconNormal","ScreenShareView","screenShare","DesktopStage","roomState","participantRenderer","controlRenderer","isConnecting","error","participants","setShowOverlay","ParticipantRenderer","ControlRenderer","p","screenTrack","otherParticipants","mainView","identity","MobileStage","StageView","stageProps","isMobile","useMediaQuery","query","container","sid","overlay","unmuteButton","size","faVolumeMute","Symbol","iterator","asyncIterator","sortParticipants","localParticipant","a","b","aLast","aVideo","localIdx","LiveKitRoom","url","token","connectOptions","stageRenderer","onConnected","adaptiveVideo","options","setRoom","setIsConnecting","setError","setParticipants","audioTracks","setAudioTracks","sortFunc","connect","body","recover","result","e","then","onParticipantsChanged","remotes","newRoom","onSubscribedTrackChanged","tracks","RoomEvent","setTimeout","useRoom","PreJoinPage","setUrl","setToken","simulcast","setSimulcast","videoEnabled","setVideoEnabled","audioEnabled","setAudioEnabled","connectDisabled","setConnectDisabled","videoRef","videoTrack","setVideoTrack","audioDevice","setAudioDevice","videoDevice","setVideoDevice","history","useHistory","current","videoEl","attach","detach","stop","toggleVideo","undefined","createLocalVideoTrack","deviceId","videoElement","type","name","value","onChange","target","checked","mediaStreamTrack","getSettings","faBolt","window","location","protocol","startsWith","params","audioDeviceId","videoDeviceId","push","pathname","search","URLSearchParams","toString","alert","href","RoomPage","numParticipants","setNumParticipants","useLocation","get","recorder","updateParticipantSize","faUserFriends","on","ParticipantConnected","ParticipantDisconnected","parseInt","console","log","onParticipantDisconnected","autoManageVideo","logLevel","LogLevel","debug","currentRoom","opts","isSet","defaultPublishOptions","audio","defaultCaptureOptions","setMicrophoneEnabled","setCameraEnabled","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d700bf68.chunk.js","sourcesContent":["import { Track } from \"livekit-client\";\nimport { useEffect, useRef } from \"react\";\n\nexport interface AudioTrackProps {\n  track: Track;\n  isLocal: boolean;\n}\n\nexport const AudioRenderer = ({ track, isLocal }: AudioTrackProps) => {\n  const audioEl = useRef<HTMLAudioElement>();\n\n  useEffect(() => {\n    if (isLocal) {\n      // don't play own audio\n      return;\n    }\n    audioEl.current = track.attach();\n    if (track.sid) {\n      audioEl.current.setAttribute(\"data-audio-track-id\", track.sid);\n    }\n    return () => track.detach().forEach((el) => el.remove());\n  }, [track, isLocal]);\n\n  // TODO: allow set sink id\n  return null;\n};\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ReactElement, useState } from \"react\";\nimport { Popover } from \"react-tiny-popover\";\nimport styles from \"./styles.module.css\";\n\ninterface ButtonProps {\n  label: string;\n  disabled?: boolean;\n  onClick?: () => void;\n  icon?: IconProp;\n  className?: string;\n  menuItems?: MenuItem[];\n  onMenuItemClick?: (item: MenuItem) => void;\n}\n\nexport interface MenuItem {\n  label: string;\n}\n\nexport const ControlButton = ({\n  label,\n  disabled,\n  onClick,\n  icon,\n  className,\n  menuItems,\n  onMenuItemClick,\n}: ButtonProps) => {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  let classes = styles.button;\n  if (className) {\n    classes += ` ${className}`;\n  }\n\n  const handleMenuClick = (item: MenuItem) => {\n    setMenuVisible(false);\n    if (onMenuItemClick) {\n      onMenuItemClick(item);\n    }\n  };\n\n  let menuTrigger: ReactElement | undefined;\n  let menu: ReactElement = <div />;\n  if (menuItems && menuItems.length > 0) {\n    classes += ` ${styles.hasDropdown}`;\n    menuTrigger = (\n      <button\n        disabled={disabled}\n        className={`${styles.button} ${styles.dropdown}`}\n        onClick={() => setMenuVisible(!menuVisible)}\n      >\n        <div className={styles.separator} />\n        <FontAwesomeIcon height={32} icon={faChevronDown} />\n      </button>\n    );\n\n    menu = (\n      <div className={styles.popoverMenu}>\n        <ul className={styles.list}>\n          {menuItems?.map((item, i) => {\n            return (\n              <li key={i} onClick={() => handleMenuClick(item)}>\n                {item.label}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  return (\n    <Popover isOpen={menuVisible} positions={[\"top\"]} content={menu}>\n      <div className={styles.buttonWrapper}>\n        <button\n          disabled={disabled}\n          className={classes}\n          onClick={() => {\n            setMenuVisible(false);\n            if (onClick) onClick();\n          }}\n        >\n          {icon && (\n            <FontAwesomeIcon className={styles.icon} height={32} icon={icon} />\n          )}\n          {label}\n        </button>\n        {menuTrigger}\n      </div>\n    </Popover>\n  );\n};\n","import {\n  faMicrophone,\n  faMicrophoneSlash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Room } from \"livekit-client\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { ControlButton, MenuItem } from \"./ControlButton\";\n\nexport interface AudioSelectButtonProps {\n  isMuted: boolean;\n  onClick?: () => void;\n  onSourceSelected?: (device: MediaDeviceInfo) => void;\n}\n\nexport const AudioSelectButton = ({\n  isMuted,\n  onClick,\n  onSourceSelected,\n}: AudioSelectButtonProps) => {\n  const [sources, setSources] = useState<MediaDeviceInfo[]>([]);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  const listAudioDevices = useCallback(async () => {\n    const devices = await Room.getLocalDevices(\"audioinput\");\n    setSources(devices);\n    setMenuItems(\n      devices.map((item) => {\n        return { label: item.label };\n      })\n    );\n  }, []);\n\n  useEffect(() => {\n    listAudioDevices();\n    navigator.mediaDevices.addEventListener(\"devicechange\", listAudioDevices);\n\n    return () => {\n      navigator.mediaDevices.removeEventListener(\n        \"devicechange\",\n        listAudioDevices\n      );\n    };\n  }, []);\n\n  const handleMenuItem = (item: MenuItem) => {\n    const device = sources.find((d) => d.label === item.label);\n    if (device && onSourceSelected) {\n      onSourceSelected(device);\n    }\n  };\n\n  return (\n    <ControlButton\n      label={isMuted ? \"Unmute\" : \"Mute\"}\n      icon={isMuted ? faMicrophoneSlash : faMicrophone}\n      onClick={onClick}\n      menuItems={menuItems}\n      onMenuItemClick={handleMenuItem}\n    />\n  );\n};\n","import {\n  LocalParticipant,\n  LocalTrack,\n  Participant,\n  ParticipantEvent,\n  Track,\n  TrackPublication,\n} from \"livekit-client\";\nimport { useEffect, useState } from \"react\";\n\nexport interface ParticipantState {\n  isSpeaking: boolean;\n  isLocal: boolean;\n  metadata?: string;\n  publications: TrackPublication[];\n  subscribedTracks: TrackPublication[];\n  cameraPublication?: TrackPublication;\n  microphonePublication?: TrackPublication;\n  screenSharePublication?: TrackPublication;\n  unpublishTrack: (track: LocalTrack) => void;\n}\n\nexport function useParticipant(participant: Participant): ParticipantState {\n  const [isAudioMuted, setAudioMuted] = useState(false);\n  const [, setVideoMuted] = useState(false);\n  const [isSpeaking, setSpeaking] = useState(false);\n  const [metadata, setMetadata] = useState<string>();\n  const [publications, setPublications] = useState<TrackPublication[]>([]);\n  const [subscribedTracks, setSubscribedTracks] = useState<TrackPublication[]>(\n    []\n  );\n\n  const onPublicationsChanged = () => {\n    setPublications(Array.from(participant.tracks.values()));\n    setSubscribedTracks(\n      Array.from(participant.tracks.values()).filter((pub) => {\n        return pub.isSubscribed && pub.track !== undefined;\n      })\n    );\n  };\n  const unpublishTrack = async (track: LocalTrack) => {\n    if (!(participant instanceof LocalParticipant)) {\n      throw new Error(\"could not unpublish, not a local participant\");\n    }\n    (participant as LocalParticipant).unpublishTrack(track);\n    participant.emit(\"localtrackchanged\");\n  };\n\n  useEffect(() => {\n    const onMuted = (pub: TrackPublication) => {\n      if (pub.kind === Track.Kind.Audio) {\n        setAudioMuted(true);\n      } else if (pub.kind === Track.Kind.Video) {\n        setVideoMuted(true);\n      }\n    };\n    const onUnmuted = (pub: TrackPublication) => {\n      if (pub.kind === Track.Kind.Audio) {\n        setAudioMuted(false);\n      } else if (pub.kind === Track.Kind.Video) {\n        setVideoMuted(false);\n      }\n    };\n    const onMetadataChanged = () => {\n      if (participant.metadata) {\n        setMetadata(participant.metadata);\n      }\n    };\n    const onIsSpeakingChanged = () => {\n      setSpeaking(participant.isSpeaking);\n    };\n\n    // register listeners\n    participant.on(ParticipantEvent.TrackMuted, onMuted);\n    participant.on(ParticipantEvent.TrackUnmuted, onUnmuted);\n    participant.on(ParticipantEvent.MetadataChanged, onMetadataChanged);\n    participant.on(ParticipantEvent.IsSpeakingChanged, onIsSpeakingChanged);\n    participant.on(ParticipantEvent.TrackPublished, onPublicationsChanged);\n    participant.on(ParticipantEvent.TrackUnpublished, onPublicationsChanged);\n    participant.on(ParticipantEvent.TrackSubscribed, onPublicationsChanged);\n    participant.on(ParticipantEvent.TrackUnsubscribed, onPublicationsChanged);\n    participant.on(ParticipantEvent.LocalTrackPublished, onPublicationsChanged);\n    participant.on(\"localtrackchanged\", onPublicationsChanged);\n\n    // set initial state\n    onMetadataChanged();\n    onIsSpeakingChanged();\n    onPublicationsChanged();\n\n    return () => {\n      // cleanup\n      participant.off(ParticipantEvent.TrackMuted, onMuted);\n      participant.off(ParticipantEvent.TrackUnmuted, onUnmuted);\n      participant.off(ParticipantEvent.MetadataChanged, onMetadataChanged);\n      participant.off(ParticipantEvent.IsSpeakingChanged, onIsSpeakingChanged);\n      participant.off(ParticipantEvent.TrackPublished, onPublicationsChanged);\n      participant.off(ParticipantEvent.TrackUnpublished, onPublicationsChanged);\n      participant.off(ParticipantEvent.TrackSubscribed, onPublicationsChanged);\n      participant.off(\n        ParticipantEvent.TrackUnsubscribed,\n        onPublicationsChanged\n      );\n      participant.off(\n        ParticipantEvent.LocalTrackPublished,\n        onPublicationsChanged\n      );\n      participant.off(\"localtrackchanged\", onPublicationsChanged);\n    };\n  }, [participant]);\n\n  let muted: boolean | undefined;\n  participant.audioTracks.forEach((pub) => {\n    muted = pub.isMuted;\n  });\n  if (muted === undefined) {\n    muted = true;\n  }\n  if (isAudioMuted !== muted) {\n    setAudioMuted(muted);\n  }\n\n  return {\n    isLocal: participant instanceof LocalParticipant,\n    isSpeaking,\n    publications,\n    subscribedTracks,\n    cameraPublication: participant.getTrack(Track.Source.Camera),\n    microphonePublication: participant.getTrack(Track.Source.Microphone),\n    screenSharePublication: participant.getTrack(Track.Source.ScreenShare),\n    metadata,\n    unpublishTrack,\n  };\n}\n","import { faVideo, faVideoSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { Room } from \"livekit-client\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { ControlButton, MenuItem } from \"./ControlButton\";\n\nexport interface VideoSelectButtonProps {\n  isEnabled: boolean;\n  onClick?: () => void;\n  onSourceSelected?: (device: MediaDeviceInfo) => void;\n}\n\nexport const VideoSelectButton = ({\n  isEnabled,\n  onClick,\n  onSourceSelected,\n}: VideoSelectButtonProps) => {\n  const [sources, setSources] = useState<MediaDeviceInfo[]>([]);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  const listVideoDevices = useCallback(async () => {\n    const devices = await Room.getLocalDevices(\"videoinput\");\n    setSources(devices);\n    setMenuItems(\n      devices.map((item) => {\n        return { label: item.label };\n      })\n    );\n  }, []);\n\n  useEffect(() => {\n    listVideoDevices();\n    navigator.mediaDevices.addEventListener(\"devicechange\", listVideoDevices);\n    return () => {\n      navigator.mediaDevices.removeEventListener(\n        \"devicechange\",\n        listVideoDevices\n      );\n    };\n  }, []);\n\n  const handleMenuItem = (item: MenuItem) => {\n    const device = sources.find((d) => d.label === item.label);\n    if (device && onSourceSelected) {\n      onSourceSelected(device);\n    }\n  };\n\n  return (\n    <ControlButton\n      label={isEnabled ? \"Disable Video\" : \"Enable Video\"}\n      icon={isEnabled ? faVideo : faVideoSlash}\n      onClick={onClick}\n      menuItems={menuItems}\n      onMenuItemClick={handleMenuItem}\n    />\n  );\n};\n","import { faDesktop, faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport { Room, Track } from \"livekit-client\";\nimport React, { ReactElement } from \"react\";\nimport { useParticipant } from \"../useParticipant\";\nimport { AudioSelectButton } from \"./AudioSelectButton\";\nimport { ControlButton } from \"./ControlButton\";\nimport styles from \"./styles.module.css\";\nimport { VideoSelectButton } from \"./VideoSelectButton\";\n\nexport interface ControlsProps {\n  room: Room;\n  enableScreenShare?: boolean;\n  enableAudio?: boolean;\n  enableVideo?: boolean;\n  onLeave?: (room: Room) => void;\n}\n\nexport const ControlsView = ({\n  room,\n  enableScreenShare,\n  enableAudio,\n  enableVideo,\n  onLeave,\n}: ControlsProps) => {\n  const { unpublishTrack } = useParticipant(room.localParticipant);\n\n  if (enableScreenShare === undefined) {\n    enableScreenShare = true;\n  }\n  if (enableVideo === undefined) {\n    enableVideo = true;\n  }\n  if (enableAudio === undefined) {\n    enableAudio = true;\n  }\n\n  let muteButton: ReactElement | undefined;\n  if (enableAudio) {\n    const enabled = room.localParticipant.isMicrophoneEnabled;\n    muteButton = (\n      <AudioSelectButton\n        isMuted={!enabled}\n        onClick={() => room.localParticipant.setMicrophoneEnabled(!enabled)}\n        onSourceSelected={(device) =>\n          room.switchActiveDevice(\"audioinput\", device.deviceId)\n        }\n      />\n    );\n  }\n\n  let videoButton: ReactElement | undefined;\n  if (enableVideo) {\n    const enabled = room.localParticipant.isCameraEnabled;\n    videoButton = (\n      <VideoSelectButton\n        isEnabled={enabled}\n        onClick={() => room.localParticipant.setCameraEnabled(!enabled)}\n        onSourceSelected={(device) => {\n          room.switchActiveDevice(\"videoinput\", device.deviceId);\n        }}\n      />\n    );\n  }\n\n  let screenButton: ReactElement | undefined;\n  if (enableScreenShare) {\n    const enabled = room.localParticipant.isScreenShareEnabled;\n    screenButton = (\n      <ControlButton\n        label={enabled ? \"Stop sharing\" : \"Share screen\"}\n        icon={enabled ? faStop : faDesktop}\n        onClick={() => {\n          if (enabled) {\n            const pub = room.localParticipant.getTrack(\n              Track.Source.ScreenShare\n            );\n            if (pub?.track) {\n              unpublishTrack(pub.track);\n            }\n          } else {\n            room.localParticipant.setScreenShareEnabled(true);\n          }\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.controlsWrapper}>\n      {muteButton}\n      {videoButton}\n      {screenButton}\n      {onLeave && (\n        <ControlButton\n          label=\"End\"\n          className={styles.dangerButton}\n          onClick={() => {\n            room.disconnect();\n            onLeave(room);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n","import { Property } from \"csstype\";\nimport { Track } from \"livekit-client\";\nimport React, { CSSProperties, useEffect, useRef } from \"react\";\nimport styles from \"./styles.module.css\";\n\nexport interface VideoRendererProps {\n  track: Track;\n  isLocal: boolean;\n  objectFit?: Property.ObjectFit;\n  className?: string;\n  width?: Property.Width;\n  height?: Property.Height;\n}\n\nexport const VideoRenderer = ({\n  track,\n  isLocal,\n  objectFit,\n  className,\n  width,\n  height,\n}: VideoRendererProps) => {\n  const ref = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) {\n      return;\n    }\n    el.muted = true;\n    track.attach(el);\n    return () => {\n      track.detach(el);\n    };\n  }, [track, ref]);\n\n  const isFrontFacing =\n    track.mediaStreamTrack?.getSettings().facingMode !== \"environment\";\n  const style: CSSProperties = {\n    transform: isLocal && isFrontFacing ? \"rotateY(180deg)\" : \"\",\n    width: width,\n    height: height,\n  };\n  if (objectFit) {\n    style.objectFit = objectFit;\n  }\n\n  return (\n    <video ref={ref} className={className ?? styles.video} style={style} />\n  );\n};\n","import {\n  faMicrophone,\n  faMicrophoneSlash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Property } from \"csstype\";\nimport { Participant } from \"livekit-client\";\nimport React, { CSSProperties, ReactElement } from \"react\";\nimport { AspectRatio } from \"react-aspect-ratio\";\nimport { useParticipant } from \"../useParticipant\";\nimport styles from \"./styles.module.css\";\nimport { VideoRenderer } from \"./VideoRenderer\";\n\nexport interface ParticipantProps {\n  participant: Participant;\n  displayName?: string;\n  // width in CSS\n  width?: Property.Width;\n  // height in CSS\n  height?: Property.Height;\n  className?: string;\n  // aspect ratio width, if set, maintains aspect ratio\n  aspectWidth?: number;\n  // aspect ratio height\n  aspectHeight?: number;\n  // determine whether to contain or cover video.\n  // cover mode is used when layout orientation matches video orientation\n  orientation?: \"landscape\" | \"portrait\";\n  // true if overlay with participant info should be shown\n  showOverlay?: boolean;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onClick?: () => void;\n}\n\nexport const ParticipantView = ({\n  participant,\n  width,\n  height,\n  className,\n  aspectWidth,\n  aspectHeight,\n  orientation,\n  displayName,\n  showOverlay,\n  onMouseEnter,\n  onMouseLeave,\n  onClick,\n}: ParticipantProps) => {\n  const { cameraPublication, isLocal } = useParticipant(participant);\n\n  const containerStyles: CSSProperties = {\n    width: width,\n    height: height,\n  };\n\n  // when aspect matches, cover instead\n  let objectFit: Property.ObjectFit = \"contain\";\n  let videoOrientation: \"landscape\" | \"portrait\" | undefined;\n  if (!orientation && aspectWidth && aspectHeight) {\n    orientation = aspectWidth > aspectHeight ? \"landscape\" : \"portrait\";\n  }\n  if (cameraPublication?.dimensions) {\n    videoOrientation =\n      cameraPublication.dimensions.width > cameraPublication.dimensions.height\n        ? \"landscape\"\n        : \"portrait\";\n  }\n\n  if (videoOrientation === orientation) {\n    objectFit = \"cover\";\n  }\n\n  if (!displayName) {\n    displayName = participant.identity;\n    if (isLocal) {\n      displayName += \" (You)\";\n    }\n  }\n\n  let mainElement: ReactElement;\n  if (\n    cameraPublication?.isSubscribed &&\n    cameraPublication?.track &&\n    !cameraPublication?.isMuted\n  ) {\n    mainElement = (\n      <VideoRenderer\n        track={cameraPublication.track}\n        isLocal={isLocal}\n        objectFit={objectFit}\n        width=\"100%\"\n        height=\"100%\"\n      />\n    );\n  } else {\n    mainElement = <div className={styles.placeholder} />;\n  }\n\n  const classes = [styles.participant];\n  if (className) {\n    classes.push(className);\n  }\n  const isAudioMuted = !participant.isMicrophoneEnabled;\n\n  return (\n    <div\n      className={classes.join(\" \")}\n      style={containerStyles}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n    >\n      {aspectWidth && aspectHeight && (\n        <AspectRatio ratio={aspectWidth / aspectHeight}>\n          {mainElement}\n        </AspectRatio>\n      )}\n      {(!aspectWidth || !aspectHeight) && mainElement}\n\n      {showOverlay && (\n        <div className={styles.participantBar}>\n          <div>{displayName}</div>\n          <div>\n            <FontAwesomeIcon\n              icon={isAudioMuted ? faMicrophoneSlash : faMicrophone}\n              height={24}\n              className={isAudioMuted ? styles.iconRed : styles.iconNormal}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Property } from \"csstype\";\nimport { Track } from \"livekit-client\";\nimport React from \"react\";\nimport styles from \"./styles.module.css\";\nimport { VideoRenderer } from \"./VideoRenderer\";\n\ninterface ScreenShareProps {\n  track: Track;\n  width?: Property.Width;\n  height?: Property.Height;\n}\n\nexport const ScreenShareView = ({ track, width, height }: ScreenShareProps) => {\n  return (\n    <div className={styles.screenShare}>\n      <VideoRenderer\n        track={track}\n        isLocal={false}\n        width={width}\n        height={height}\n      />\n    </div>\n  );\n};\n","import { Track, VideoTrack } from \"livekit-client\";\nimport React, { ReactElement, useState } from \"react\";\nimport { ControlsView } from \"../ControlsView\";\nimport { ParticipantView } from \"../ParticipantView\";\nimport { ScreenShareView } from \"../ScreenShareView\";\nimport { StageProps } from \"../StageProps\";\nimport styles from \"./styles.module.css\";\n\nexport const DesktopStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [showOverlay, setShowOverlay] = useState(false);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (participants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  // find first participant with screen shared\n  let screenTrack: VideoTrack | undefined;\n  participants.forEach((p) => {\n    if (screenTrack) {\n      return;\n    }\n    const track = p.getTrack(Track.Source.ScreenShare);\n    if (track?.isSubscribed && track.videoTrack) {\n      screenTrack = track.videoTrack;\n    }\n  });\n\n  const otherParticipants = participants;\n  let mainView: ReactElement;\n  if (screenTrack) {\n    mainView = (\n      <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />\n    );\n  } else {\n    mainView = (\n      <ParticipantRenderer\n        key={participants[0].identity}\n        participant={participants[0]}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"landscape\"\n        showOverlay={showOverlay}\n        onMouseEnter={() => setShowOverlay(true)}\n        onMouseLeave={() => setShowOverlay(false)}\n      />\n    );\n  }\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={styles.stage}>\n        <div className={styles.stageCenter}>{mainView}</div>\n        <div className={styles.sidebar}>\n          {otherParticipants.map((participant) => {\n            return (\n              <ParticipantRenderer\n                key={participant.identity}\n                participant={participant}\n                width=\"100%\"\n                aspectWidth={16}\n                aspectHeight={9}\n                showOverlay={showOverlay}\n                onMouseEnter={() => setShowOverlay(true)}\n                onMouseLeave={() => setShowOverlay(false)}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { Track, VideoTrack } from \"livekit-client\";\nimport React, { ReactElement, useState } from \"react\";\nimport { ControlsView } from \"../ControlsView\";\nimport { ParticipantView } from \"../ParticipantView\";\nimport { ScreenShareView } from \"../ScreenShareView\";\nimport { StageProps } from \"../StageProps\";\nimport styles from \"./styles.module.css\";\n\nexport const MobileStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [showOverlay, setShowOverlay] = useState(false);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (participants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  // find first participant with screen shared\n  let screenTrack: VideoTrack | undefined;\n  participants.forEach((p) => {\n    if (screenTrack) {\n      return;\n    }\n    const track = p.getTrack(Track.Source.ScreenShare);\n    if (track?.isSubscribed && track.videoTrack) {\n      screenTrack = track.videoTrack;\n    }\n  });\n\n  const otherParticipants = participants;\n  let mainView: ReactElement;\n  if (screenTrack) {\n    mainView = (\n      <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />\n    );\n  } else {\n    mainView = (\n      <ParticipantRenderer\n        key={participants[0].identity}\n        participant={participants[0]}\n        showOverlay={showOverlay}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"portrait\"\n        onMouseEnter={() => setShowOverlay(true)}\n        onMouseLeave={() => setShowOverlay(false)}\n      />\n    );\n  }\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={styles.stage}>{mainView}</div>\n      <div className={styles.participantsArea}>\n        {otherParticipants.map((participant) => {\n          return (\n            <ParticipantRenderer\n              key={participant.identity}\n              participant={participant}\n              className={styles.participant}\n              aspectWidth={4}\n              aspectHeight={3}\n              showOverlay={showOverlay}\n              onMouseEnter={() => setShowOverlay(true)}\n              onMouseLeave={() => setShowOverlay(false)}\n            />\n          );\n        })}\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer\n          room={room}\n          enableScreenShare={false}\n          onLeave={onLeave}\n        />\n      </div>\n    </div>\n  );\n};\n","import { faVolumeMute } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ReactElement } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { AudioRenderer } from \"./AudioRenderer\";\nimport { DesktopStage } from \"./desktop/DesktopStage\";\nimport { MobileStage } from \"./mobile/MobileStage\";\nimport { StageProps } from \"./StageProps\";\nimport styles from \"./styles.module.css\";\n\nexport const StageView = (stageProps: StageProps) => {\n  const isMobile = useMediaQuery({ query: \"(max-width: 800px)\" });\n  const { room } = stageProps.roomState;\n\n  let mainElement: ReactElement;\n  if (isMobile) {\n    mainElement = <MobileStage {...stageProps} />;\n  } else {\n    mainElement = <DesktopStage {...stageProps} />;\n  }\n\n  return (\n    <div className={styles.container}>\n      {mainElement}\n      {stageProps.roomState.audioTracks.map((track) => (\n        <AudioRenderer key={track.sid} track={track} isLocal={false} />\n      ))}\n\n      {room?.canPlaybackAudio === false && (\n        <div className={styles.overlay}>\n          <button\n            className={styles.unmuteButton}\n            onClick={() => {\n              room.startAudio();\n            }}\n          >\n            <FontAwesomeIcon\n              className={styles.icon}\n              size=\"1x\"\n              icon={faVolumeMute}\n            />\n            Click to Unmute\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import {\n  AudioTrack,\n  connect,\n  ConnectOptions,\n  LocalParticipant,\n  Participant,\n  RemoteTrack,\n  Room,\n  RoomEvent,\n  Track,\n} from \"livekit-client\";\nimport { useCallback, useState } from \"react\";\n\nexport interface RoomState {\n  connect: (\n    url: string,\n    token: string,\n    options?: ConnectOptions\n  ) => Promise<Room | undefined>;\n  isConnecting: boolean;\n  room?: Room;\n  /* all participants in the room, including the local participant. */\n  participants: Participant[];\n  /* all subscribed audio tracks in the room, not including local participant. */\n  audioTracks: AudioTrack[];\n  error?: Error;\n}\n\nexport interface RoomOptions {\n  sortParticipants?: (participants: Participant[]) => void;\n}\n\nexport function useRoom(options?: RoomOptions): RoomState {\n  const [room, setRoom] = useState<Room>();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState<Error>();\n  const [participants, setParticipants] = useState<Participant[]>([]);\n  const [audioTracks, setAudioTracks] = useState<AudioTrack[]>([]);\n\n  const sortFunc = options?.sortParticipants ?? sortParticipants;\n\n  const connectFn = useCallback(\n    async (url: string, token: string, options?: ConnectOptions) => {\n      setIsConnecting(true);\n      try {\n        const newRoom = await connect(url, token, options);\n        setRoom(newRoom);\n        const onParticipantsChanged = () => {\n          const remotes = Array.from(newRoom.participants.values());\n          const participants: Participant[] = [newRoom.localParticipant];\n          participants.push(...remotes);\n          sortFunc(participants, newRoom.localParticipant);\n          setParticipants(participants);\n        };\n        const onSubscribedTrackChanged = (track?: RemoteTrack) => {\n          // ordering may have changed, re-sort\n          onParticipantsChanged();\n          if (track && track.kind !== Track.Kind.Audio) {\n            return;\n          }\n          const tracks: AudioTrack[] = [];\n          newRoom.participants.forEach((p) => {\n            p.audioTracks.forEach((pub) => {\n              if (pub.track && pub.kind === Track.Kind.Audio) {\n                tracks.push(pub.track);\n              }\n            });\n          });\n          setAudioTracks(tracks);\n        };\n\n        newRoom.once(RoomEvent.Disconnected, () => {\n          setTimeout(() => setRoom(undefined));\n\n          newRoom.off(RoomEvent.ParticipantConnected, onParticipantsChanged);\n          newRoom.off(RoomEvent.ParticipantDisconnected, onParticipantsChanged);\n          newRoom.off(RoomEvent.ActiveSpeakersChanged, onParticipantsChanged);\n          newRoom.off(RoomEvent.TrackSubscribed, onSubscribedTrackChanged);\n          newRoom.off(RoomEvent.TrackUnsubscribed, onSubscribedTrackChanged);\n          newRoom.off(RoomEvent.LocalTrackPublished, onSubscribedTrackChanged);\n          newRoom.localParticipant.off(\n            \"localtrackchanged\",\n            onSubscribedTrackChanged\n          );\n        });\n        newRoom.on(RoomEvent.ParticipantConnected, onParticipantsChanged);\n        newRoom.on(RoomEvent.ParticipantDisconnected, onParticipantsChanged);\n        newRoom.on(RoomEvent.ActiveSpeakersChanged, onParticipantsChanged);\n        newRoom.on(RoomEvent.TrackSubscribed, onSubscribedTrackChanged);\n        newRoom.on(RoomEvent.TrackUnsubscribed, onSubscribedTrackChanged);\n        newRoom.on(RoomEvent.LocalTrackPublished, onSubscribedTrackChanged);\n        newRoom.localParticipant.on(\n          \"localtrackchanged\",\n          onSubscribedTrackChanged\n        );\n\n        setIsConnecting(false);\n        onSubscribedTrackChanged();\n\n        return newRoom;\n      } catch (error) {\n        setIsConnecting(false);\n        if (error instanceof Error) {\n          setError(error);\n        } else {\n          setError(new Error(\"an error has occured\"));\n        }\n\n        return undefined;\n      }\n    },\n    []\n  );\n\n  return {\n    connect: connectFn,\n    isConnecting,\n    room,\n    error,\n    participants,\n    audioTracks,\n  };\n}\n\n/**\n * Default sort for participants, it'll order participants by:\n * 1. dominant speaker (speaker with the loudest audio level)\n * 2. local participant\n * 3. other speakers that are recently active\n * 4. participants with video on\n * 5. by joinedAt\n */\nexport function sortParticipants(\n  participants: Participant[],\n  localParticipant?: LocalParticipant\n) {\n  participants.sort((a, b) => {\n    // loudest speaker first\n    if (a.isSpeaking && b.isSpeaking) {\n      return b.audioLevel - a.audioLevel;\n    }\n\n    // speaker goes first\n    if (a.isSpeaking !== b.isSpeaking) {\n      if (a.isSpeaking) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // last active speaker first\n    if (a.lastSpokeAt !== b.lastSpokeAt) {\n      const aLast = a.lastSpokeAt?.getTime() ?? 0;\n      const bLast = b.lastSpokeAt?.getTime() ?? 0;\n      return bLast - aLast;\n    }\n\n    // video on\n    const aVideo = a.videoTracks.size > 0;\n    const bVideo = b.videoTracks.size > 0;\n    if (aVideo !== bVideo) {\n      if (aVideo) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // joinedAt\n    return (a.joinedAt?.getTime() ?? 0) - (b.joinedAt?.getTime() ?? 0);\n  });\n\n  if (localParticipant) {\n    const localIdx = participants.indexOf(localParticipant);\n    if (localIdx >= 0) {\n      participants.splice(localIdx, 1);\n      if (participants.length > 0) {\n        participants.splice(1, 0, localParticipant);\n      } else {\n        participants.push(localParticipant);\n      }\n    }\n  }\n}\n","import { ConnectOptions, Participant, Room } from \"livekit-client\";\nimport React, { useEffect } from \"react\";\nimport { ControlsProps } from \"./components/ControlsView\";\nimport { ParticipantProps } from \"./components/ParticipantView\";\nimport { StageProps } from \"./components/StageProps\";\nimport { StageView } from \"./components/StageView\";\nimport { useRoom } from \"./useRoom\";\n\nexport interface RoomProps {\n  url: string;\n  token: string;\n  connectOptions?: ConnectOptions;\n  // override default participant sort\n  sortParticipants?: (participants: Participant[]) => void;\n  /**\n   * when set to true, optimize bandwidth (and room capacity) by\n   * * disabling receiving video when participant is hidden\n   * * use lower quality video when participant is displayed as thumbnail\n   */\n  adaptiveVideo?: Boolean;\n  // when first connected to room\n  onConnected?: (room: Room) => void;\n  // when user leaves the room\n  onLeave?: (room: Room) => void;\n  stageRenderer?: (props: StageProps) => React.ReactElement | null;\n  participantRenderer?: (props: ParticipantProps) => React.ReactElement | null;\n  controlRenderer?: (props: ControlsProps) => React.ReactElement | null;\n}\n\nexport const LiveKitRoom = ({\n  url,\n  token,\n  connectOptions,\n  sortParticipants,\n  stageRenderer,\n  participantRenderer,\n  controlRenderer,\n  onConnected,\n  onLeave,\n  adaptiveVideo,\n}: RoomProps) => {\n  const roomState = useRoom({ sortParticipants });\n  if (!connectOptions) {\n    connectOptions = {};\n  }\n  if (adaptiveVideo) {\n    connectOptions.autoManageVideo = true;\n  }\n\n  useEffect(() => {\n    roomState.connect(url, token, connectOptions).then((room) => {\n      if (!room) {\n        return;\n      }\n      if (onConnected) {\n        onConnected(room);\n      }\n      return () => {\n        room.disconnect();\n      };\n    });\n  }, []);\n\n  const selectedStageRenderer = stageRenderer ?? StageView;\n\n  return selectedStageRenderer({\n    roomState,\n    participantRenderer,\n    controlRenderer,\n    onLeave,\n  });\n};\n","import { faBolt } from '@fortawesome/free-solid-svg-icons'\nimport { createLocalVideoTrack, LocalVideoTrack } from 'livekit-client'\nimport { AudioSelectButton, ControlButton, VideoRenderer, VideoSelectButton } from 'livekit-react'\nimport React, { ReactElement, useEffect, useRef, useState } from \"react\"\nimport { AspectRatio } from 'react-aspect-ratio'\nimport { useHistory } from 'react-router-dom'\n\nexport const PreJoinPage = () => {\n  // state to pass onto room\n  const [url, setUrl] = useState('ws://localhost:7880')\n  const [token, setToken] = useState<string>('')\n  const [simulcast, setSimulcast] = useState(true)\n  const [videoEnabled, setVideoEnabled] = useState(false)\n  const [audioEnabled, setAudioEnabled] = useState(true)\n  // disable connect button unless validated\n  const [connectDisabled, setConnectDisabled] = useState(true)\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [videoTrack, setVideoTrack] = useState<LocalVideoTrack>();\n  const [audioDevice, setAudioDevice] = useState<MediaDeviceInfo>();\n  const [videoDevice, setVideoDevice] = useState<MediaDeviceInfo>();\n  const history = useHistory()\n\n  useEffect(() => {\n    if (!videoRef.current || !videoTrack) {\n      return\n    }\n    const videoEl = videoRef.current;\n    videoTrack.attach(videoEl)\n    return () => {\n      videoTrack.detach(videoEl)\n      videoTrack.stop()\n    }\n  }, [videoTrack, videoRef])\n\n  useEffect(() => {\n    if (token && url) {\n      setConnectDisabled(false)\n    } else {\n      setConnectDisabled(true)\n    }\n  }, [token, url])\n\n  const toggleVideo = async () => {\n    if (videoTrack) {\n      videoTrack.stop()\n      setVideoEnabled(false)\n      setVideoTrack(undefined)\n    } else {\n      const track = await createLocalVideoTrack({\n        deviceId: videoDevice?.deviceId,\n      })\n      setVideoEnabled(true)\n      setVideoTrack(track)\n    }\n  }\n\n  useEffect(() => {\n    // enable video by default\n    createLocalVideoTrack({\n      deviceId: videoDevice?.deviceId,\n    }).then((track) => {\n      setVideoEnabled(true)\n      setVideoTrack(track)\n    })\n  }, [videoDevice])\n\n  const toggleAudio = () => {\n    if (audioEnabled) {\n      setAudioEnabled(false)\n    } else {\n      setAudioEnabled(true)\n    }\n  }\n\n  const selectVideoDevice = (device: MediaDeviceInfo) => {\n    setVideoDevice(device);\n    if (videoTrack) {\n      if (videoTrack.mediaStreamTrack.getSettings().deviceId === device.deviceId) {\n        return\n      }\n      // stop video\n      videoTrack.stop()\n    }\n  }\n\n  const connectToRoom = () => {\n    if (videoTrack) {\n      videoTrack.stop()\n    }\n\n    if (window.location.protocol === 'https:' &&\n        url.startsWith('ws://') && !url.startsWith('ws://localhost')) {\n      alert('Unable to connect to insecure websocket from https');\n      return\n    }\n\n    const params: {[key: string]: string} = {\n      url,\n      token,\n      videoEnabled: videoEnabled ? '1' : '0',\n      audioEnabled: audioEnabled ? '1' : '0',\n      simulcast: simulcast ? '1' : '0',\n    }\n    if (audioDevice) {\n      params.audioDeviceId = audioDevice.deviceId;\n    }\n    if (videoDevice) {\n      params.videoDeviceId = videoDevice.deviceId;\n    }\n    history.push({\n      pathname: '/room',\n      search: \"?\" + new URLSearchParams(params).toString()\n    })\n  }\n\n  let videoElement: ReactElement;\n  if (videoTrack) {\n    videoElement = <VideoRenderer track={videoTrack} isLocal={true} />;\n  } else {\n    videoElement = <div className=\"placeholder\"/>\n  }\n\n  return (\n    <div className=\"prejoin\">\n      <main>\n        <h2>LiveKit Video</h2>\n        <hr/>\n        <div className=\"entrySection\">\n          <div>\n            <div className=\"label\">\n              LiveKit URL\n            </div>\n            <div>\n              <input type=\"text\" name=\"url\" value={url} onChange={e => setUrl(e.target.value)} />\n            </div>\n          </div>\n          <div>\n            <div className=\"label\">\n              Token\n            </div>\n            <div>\n              <input type=\"text\" name=\"token\" value={token} onChange={e => setToken(e.target.value)} />\n            </div>\n          </div>\n          <div>\n            <input type=\"checkbox\" name=\"simulcast\" checked={simulcast} onChange={e => setSimulcast(e.target.checked)}/>\n            <label>Simulcast</label>\n          </div>\n        </div>\n\n        <div className=\"videoSection\">\n          <AspectRatio ratio={16 / 9}>\n            {videoElement}\n          </AspectRatio>\n        </div>\n\n        <div className=\"controlSection\">\n          <div>\n            <AudioSelectButton\n              isMuted={!audioEnabled}\n              onClick={toggleAudio}\n              onSourceSelected={setAudioDevice}\n              />\n            <VideoSelectButton\n              isEnabled={videoTrack !== undefined}\n              onClick={toggleVideo}\n              onSourceSelected={selectVideoDevice}\n            />\n          </div>\n          <div className=\"right\">\n            <ControlButton\n              label=\"Connect\"\n              disabled={connectDisabled}\n              icon={faBolt}\n              onClick={connectToRoom}/>\n          </div>\n        </div>\n      </main>\n      <footer>\n        This page is built with <a href=\"https://github.com/livekit/livekit-react\">LiveKit React</a>&nbsp;\n        (<a href=\"https://github.com/livekit/livekit-react/blob/master/example/src/PreJoinPage.tsx\">source</a>)\n      </footer>\n    </div>\n  )\n}\n","import { faUserFriends } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { ConnectOptions, LogLevel, Room, RoomEvent } from 'livekit-client'\nimport { LiveKitRoom } from 'livekit-react'\nimport React, { useState } from \"react\"\nimport \"react-aspect-ratio/aspect-ratio.css\"\nimport { useHistory, useLocation } from 'react-router-dom'\n\nexport const RoomPage = () => {\n  const [numParticipants, setNumParticipants] = useState(0)\n  const history = useHistory()\n  const query = new URLSearchParams(useLocation().search)\n  const url = query.get('url')\n  const token = query.get('token')\n  const recorder = query.get('recorder')\n\n  if (!url || !token) {\n    return (\n      <div>\n        url and token are required\n      </div>\n    )\n  }\n\n  const onLeave = () => {\n    history.push({\n      pathname: '/',\n    })\n  }\n\n  const updateParticipantSize = (room: Room) => {\n    setNumParticipants(room.participants.size + 1);\n  }\n\n  const onParticipantDisconnected = (room: Room) => {\n    updateParticipantSize(room)\n\n    /* Special rule for recorder */\n    if (recorder && parseInt(recorder, 10) === 1 && room.participants.size === 0) {\n      console.log(\"END_RECORDING\")\n    }\n  }\n\n  return (\n    <div className=\"roomContainer\">\n      <div className=\"topBar\">\n        <h2>LiveKit Video</h2>\n        <div className=\"participantCount\">\n          <FontAwesomeIcon icon={faUserFriends} />\n          <span>{numParticipants}</span>\n        </div>\n      </div>\n      <LiveKitRoom\n        url={url}\n        token={token}\n        onConnected={room => {\n          onConnected(room, query);\n          room.on(RoomEvent.ParticipantConnected, () => updateParticipantSize(room))\n          room.on(RoomEvent.ParticipantDisconnected, () => onParticipantDisconnected(room))\n          updateParticipantSize(room);\n        }}\n        connectOptions={{\n          autoManageVideo: true,\n          logLevel: LogLevel.debug,\n        }}\n        onLeave={onLeave}\n      />\n    </div>\n  )\n}\n\nasync function onConnected(room: Room, query: URLSearchParams) {\n  // make it easier to debug\n  (window as any).currentRoom = room;\n\n  const opts: ConnectOptions = {};\n\n  if (isSet(query, 'simulcast')) {\n    room.defaultPublishOptions.simulcast = true;\n  }\n\n  if (isSet(query, 'audioEnabled')) {\n    opts.audio = true\n    const audioDeviceId = query.get('audioDeviceId');\n    if (audioDeviceId) {\n      room.defaultCaptureOptions.audioDeviceId = audioDeviceId;\n    }\n    await room.localParticipant.setMicrophoneEnabled(true);\n  }\n\n  if (isSet(query, 'videoEnabled')) {\n    opts.video = true\n    const videoDeviceId = query.get('videoDeviceId');\n    if (videoDeviceId) {\n      room.defaultCaptureOptions.videoDeviceId = videoDeviceId;\n    }\n    await room.localParticipant.setCameraEnabled(true);\n  }\n}\n\nfunction isSet(query: URLSearchParams, key: string): boolean {\n  return query.get(key) === '1' || query.get(key) === 'true';\n}\n","import 'livekit-react/dist/index.css'\nimport React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { PreJoinPage } from './PreJoinPage'\nimport { RoomPage } from './RoomPage'\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <Router>\n        <Switch>\n          <Route path=\"/room\">\n            <RoomPage/>\n          </Route>\n          <Route path=\"/\">\n            <PreJoinPage/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}